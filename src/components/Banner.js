import * as React from 'react';
import { useStore } from '../context/BannerContext';

// assets import
import QRCode from '../assets/QrCode.png';
import SecondQRCode from '../assets/SecondQrCode.png';

const Banner = () => {
	const strokeWidth = '0.2';
	const strokeColor = '#f7f4f4';
	const delay = 4500;

	const { hoverT, setHoverT, hoverO, setHoverO, hoverU, setHoverU, hoverC, setHoverC, hoverH, setHoverH, showFirstQrCode, setShowFirstQrCode, showSecondQrCode, setShowSecondQrCode } = useStore();

	React.useEffect(() => {
		setTimeout(() => {
			setShowFirstQrCode(true);
		}, delay);
	}, [setShowFirstQrCode]);

	return (
		<div className='flex flex-col items-center justify-between select-none'>
			<svg width='320' viewBox='0 0 85 101' fill='none' xmlns='http://www.w3.org/2000/svg'>
				<g id='g8'>
					<g id='g16'>
						<g id='g18'>
							{showFirstQrCode === false && (
								<React.Fragment>
									<g id='g12'>
										<path id='path14' d='M0.586426 86.0993V83.2566H13.4518V86.0993H8.55043V100.655H5.48776V86.0993H0.586426Z' fill='#24C7B1' />
									</g>
									<g id='g24'>
										<path
											id='path26'
											d='M22.972 96.0608C23.34 95.4155 23.524 94.6848 23.524 93.8675C23.524 93.0182 23.34 92.2702 22.972 91.6248C22.604 90.9795 22.1027 90.4862 21.4653 90.1422C20.828 89.7995 20.1253 89.6275 19.3573 89.6275C18.5893 89.6275 17.8947 89.7995 17.2747 90.1422C16.6533 90.4862 16.16 90.9795 15.792 91.6248C15.424 92.2702 15.24 93.0182 15.24 93.8675C15.24 94.6848 15.424 95.4155 15.792 96.0608C16.16 96.7062 16.6573 97.2088 17.2867 97.5675C17.916 97.9275 18.6067 98.1075 19.3573 98.1075C20.1253 98.1075 20.828 97.9275 21.4653 97.5675C22.1027 97.2088 22.604 96.7062 22.972 96.0608M13.1213 97.4208C12.476 96.3262 12.1533 95.1422 12.1533 93.8675C12.1533 92.5608 12.476 91.3595 13.1213 90.2648C13.7667 89.1702 14.64 88.3088 15.7427 87.6795C16.8453 87.0502 18.0507 86.7368 19.3573 86.7368C20.664 86.7368 21.8693 87.0502 22.972 87.6795C24.0747 88.3088 24.9493 89.1702 25.5947 90.2648C26.24 91.3595 26.5627 92.5608 26.5627 93.8675C26.5627 95.1422 26.24 96.3262 25.5947 97.4208C24.9493 98.5155 24.0747 99.3848 22.972 100.032C21.8693 100.676 20.664 101 19.3573 101C18.0507 101 16.8453 100.676 15.7427 100.032C14.64 99.3848 13.7667 98.5155 13.1213 97.4208'
											fill='#24C7B1'
										/>
									</g>
									<g id='g28'>
										<path
											id='path30'
											d='M29.2451 98.291C28.7464 97.4337 28.4971 96.4577 28.4971 95.363V87.079H31.5357V95.5337C31.5357 96.367 31.7891 97.0084 32.2957 97.4577C32.8024 97.907 33.4717 98.1324 34.3051 98.1324C35.1544 98.1324 35.8211 97.899 36.3024 97.4337C36.7851 96.967 37.0251 96.335 37.0251 95.5337V87.079H40.1131V95.363C40.1131 96.4577 39.8637 97.4337 39.3664 98.291C38.8677 99.1484 38.1771 99.815 37.2957 100.288C36.4131 100.762 35.4157 100.999 34.3051 100.999C33.1944 100.999 32.1984 100.762 31.3157 100.288C30.4331 99.815 29.7437 99.1484 29.2451 98.291Z'
											fill='#24C7B1'
										/>
									</g>
									<g id='g32'>
										<path
											id='path34'
											d='M42.968 97.4086C42.3227 96.3059 42 95.1006 42 93.7939C42 92.4873 42.3227 91.2859 42.968 90.1913C43.6133 89.0966 44.492 88.2273 45.6027 87.5819C46.7133 86.9366 47.9227 86.6139 49.2293 86.6139C50.2427 86.6139 51.2027 86.8139 52.1093 87.2139C53.016 87.6139 53.804 88.1659 54.4733 88.8686L52.4893 90.9019C52.096 90.4606 51.6227 90.1179 51.0667 89.8726C50.512 89.6273 49.9 89.5059 49.2293 89.5059C48.4773 89.5059 47.784 89.6926 47.1467 90.0686C46.5093 90.4446 46.0067 90.9593 45.6387 91.6126C45.272 92.2659 45.088 92.9939 45.088 93.7939C45.088 94.5939 45.272 95.3259 45.6387 95.9873C46.0067 96.6486 46.5093 97.1673 47.1467 97.5433C47.784 97.9193 48.4773 98.1073 49.2293 98.1073C50.4707 98.1073 51.5 97.6979 52.3173 96.8819L54.3027 98.8913C53.6493 99.5606 52.8853 100.079 52.0107 100.447C51.1373 100.815 50.2093 100.999 49.2293 100.999C47.9227 100.999 46.7133 100.677 45.6027 100.031C44.492 99.3859 43.6133 98.5113 42.968 97.4086Z'
											fill='#24C7B1'
										/>
									</g>
									<g id='g36'>
										<path id='path38' d='M68.6987 100.631H65.66V89.9473H59.5094V100.631H56.4707V83.2567H59.5094V87.0793H68.6987V100.631Z' fill='#24C7B1' />
									</g>
									<g id='g40'>
										<path id='path42' d='M78.1378 85.1616L81.0952 81.9736H77.6711L75.3618 85.1616H78.1378Z' fill='#24C7B1' />
									</g>
									<g id='g44'>
										<path
											id='path46'
											d='M73.6822 93.8638C73.6822 93.8545 73.6836 93.8465 73.6836 93.8372C73.6836 93.8305 73.6822 93.8238 73.6822 93.8172C73.6822 92.8332 73.9942 91.9652 74.6102 91.2278C74.8662 90.9132 75.1689 90.6385 75.5062 90.4132C75.5169 90.4052 75.5289 90.3998 75.5396 90.3918C75.6329 90.3318 75.7276 90.2718 75.8262 90.2185C75.9262 90.1638 76.0302 90.1158 76.1342 90.0705C76.1476 90.0652 76.1609 90.0572 76.1742 90.0518C76.2782 90.0078 76.3849 89.9705 76.4929 89.9372C76.5129 89.9305 76.5329 89.9212 76.5542 89.9145C76.6156 89.8958 76.6796 89.8838 76.7409 89.8678C77.0476 89.7905 77.3676 89.7478 77.6996 89.7452C77.7222 89.7452 77.7449 89.7412 77.7689 89.7412C77.7702 89.7412 77.7716 89.7425 77.7729 89.7425C77.7756 89.7425 77.7782 89.7412 77.7809 89.7412C77.9209 89.7438 78.0582 89.7532 78.1942 89.7678C78.2836 89.7772 78.3702 89.7905 78.4582 89.8038C78.5009 89.8118 78.5436 89.8198 78.5862 89.8292C78.7636 89.8638 78.9369 89.9105 79.1062 89.9678C79.1409 89.9798 79.1769 89.9892 79.2102 90.0025C79.2836 90.0292 79.3569 90.0598 79.4276 90.0918C79.5222 90.1318 79.6142 90.1772 79.7049 90.2238C79.7302 90.2372 79.7569 90.2465 79.7822 90.2612C79.7876 90.2638 79.7929 90.2692 79.7996 90.2718C80.0116 90.3905 80.2129 90.5265 80.3996 90.6798L73.7409 94.5345C73.7062 94.3158 73.6822 94.0932 73.6822 93.8638ZM81.7622 95.8972C81.3156 96.5252 80.7329 97.0238 80.0302 97.3785C79.3329 97.7265 78.5729 97.9038 77.7689 97.9038C76.7862 97.9038 75.9156 97.5918 75.1769 96.9745L84.6729 91.4892L83.8796 90.1745C83.2396 89.0958 82.3636 88.2372 81.2769 87.6212C80.1889 87.0052 79.0089 86.6918 77.7689 86.6918C75.8062 86.6918 74.1116 87.3945 72.7342 88.7812C71.3476 90.1678 70.6436 91.8625 70.6436 93.8172C70.6436 95.7798 71.3476 97.4772 72.7342 98.8638C74.1129 100.242 75.8062 100.941 77.7689 100.941C79.0862 100.941 80.3449 100.63 81.5089 100.016C82.6729 99.4012 83.6276 98.5478 84.3489 97.4798L84.4662 97.3038L81.8689 95.7465L81.7622 95.8972Z'
											fill='#24C7B1'
										/>
									</g>
								</React.Fragment>
							)}
							{/* Touche text */}
							<a href='#0'>
								<g onMouseMove={() => setHoverT(true)} onMouseLeave={() => setHoverT(false)} id='T'>
									<path
										stroke={hoverT ? strokeColor : undefined}
										strokeWidth={strokeWidth}
										id='path70'
										d='M42.6297 49.1101C43.3524 49.1101 43.9364 48.5248 43.9364 47.8034V29.1568H45.9884C46.711 29.1568 47.295 28.5714 47.295 27.8501C47.295 27.1274 46.711 26.5434 45.9884 26.5434H39.271C38.5484 26.5434 37.9644 27.1274 37.9644 27.8501C37.9644 28.5714 38.5484 29.1568 39.271 29.1568H41.323V47.8034C41.323 48.5248 41.907 49.1101 42.6297 49.1101Z'
										fill='#24C7B1'
									/>
								</g>
							</a>

							<a href='#1'>
								<g onMouseMove={() => setHoverO(true)} onMouseLeave={() => setHoverO(false)} id='O'>
									<path
										stroke={hoverO ? strokeColor : undefined}
										strokeWidth={strokeWidth}
										id='path66'
										d='M36.6552 48.5688C36.3512 47.9155 35.5738 47.6315 34.9178 47.9355C34.2645 48.2408 33.9805 49.0168 34.2845 49.6728C35.7898 52.9048 39.0645 54.9941 42.6298 54.9941C47.7018 54.9941 51.8285 50.8688 51.8285 45.7955V27.5915C51.8285 22.5181 47.7018 18.3928 42.6298 18.3928C37.5565 18.3928 33.4312 22.5181 33.4312 27.5915V43.6528C33.4312 44.3741 34.0165 44.9595 34.7378 44.9595C35.4605 44.9595 36.0445 44.3741 36.0445 43.6528V27.5915C36.0445 23.9595 38.9992 21.0061 42.6298 21.0061C46.2605 21.0061 49.2152 23.9595 49.2152 27.5915V45.7955C49.2152 49.4275 46.2605 52.3808 42.6298 52.3808C40.0765 52.3808 37.7325 50.8848 36.6552 48.5688Z'
										fill='#24C7B1'
									/>
								</g>
							</a>

							<a href='#2'>
								<g onMouseMove={() => setHoverU(true)} onMouseLeave={() => setHoverU(false)} id='U'>
									<path
										stroke={hoverU ? strokeColor : undefined}
										strokeWidth={strokeWidth}
										id='path74'
										d='M42.797 60.3516C34.9677 60.3516 28.229 54.0062 28.229 46.4942V27.6316C28.229 26.9076 28.8157 26.3209 29.5397 26.3209C30.2637 26.3209 30.8503 26.9076 30.8503 27.6316V46.4942C30.8503 52.5849 36.389 57.7316 42.797 57.7316C48.973 57.7316 54.4103 52.5849 54.4103 46.4942V27.1809C54.4103 23.9422 52.9157 20.8449 50.309 18.6809C49.7517 18.2182 49.6757 17.3929 50.137 16.8356C50.5997 16.2782 51.425 16.2022 51.9823 16.6649C55.1903 19.3276 57.0303 23.1609 57.0303 27.1809V46.4942C57.0303 54.0062 50.3357 60.3516 42.797 60.3516Z'
										fill='#24C7B1'
									/>
								</g>
							</a>
							<a href='#3'>
								<g onMouseMove={() => setHoverC(true)} onMouseLeave={() => setHoverC(false)} id='C'>
									<path
										stroke={hoverC ? strokeColor : undefined}
										strokeWidth={strokeWidth}
										id='path54'
										d='M62.3595 46.4773C62.3595 45.7546 61.7742 45.1706 61.0529 45.1706C60.3302 45.1706 59.7462 45.7546 59.7462 46.4773C59.7462 55.2813 52.1809 62.7199 43.2262 62.7199H41.9235C33.0289 62.7199 25.5142 55.2813 25.5142 46.4773V27.3933C25.5142 18.6439 33.2555 10.9693 42.0822 10.9693H43.2409C52.0329 10.9693 59.7462 18.6439 59.7462 27.3933C59.7462 28.1146 60.3302 28.6999 61.0529 28.6999C61.7742 28.6999 62.3595 28.1146 62.3595 27.3933C62.3595 17.0733 53.6049 8.35592 43.2409 8.35592H42.0822C31.6849 8.35592 22.9009 17.0733 22.9009 27.3933V46.4773C22.9009 56.6973 31.6115 65.3333 41.9235 65.3333H43.2262C53.5982 65.3333 62.3595 56.6973 62.3595 46.4773Z'
										fill='#24C7B1'
									/>
								</g>
							</a>
							<a href='#4'>
								<g id='H' onMouseMove={() => setHoverH(true)} onMouseLeave={() => setHoverH(false)}>
									<path
										stroke={hoverH ? strokeColor : undefined}
										strokeWidth={strokeWidth}
										id='path58'
										d='M30.1299 64.4449C23.9113 60.6982 20.0473 53.7783 20.0473 46.3836V27.4863C20.0473 20.1129 23.978 12.9596 30.0606 9.26492C30.6779 8.89026 30.874 8.08625 30.4993 7.46892C30.1246 6.85292 29.3206 6.65558 28.7046 7.03025C21.8566 11.1902 17.4326 19.2196 17.4326 27.4863V46.3836C17.4326 54.6889 21.7819 62.4676 28.7806 66.6836C28.9926 66.8116 29.2246 66.8716 29.4539 66.8716C29.8979 66.8716 30.3299 66.6462 30.5753 66.2396C30.9473 65.6209 30.7473 64.8169 30.1299 64.4449Z'
										fill='#24C7B1'
									/>
								</g>
							</a>

							<a href='#4'>
								<g id='H' onMouseMove={() => setHoverH(true)} onMouseLeave={() => setHoverH(false)} stroke={hoverH ? strokeColor : undefined} strokeWidth={strokeWidth}>
									<path
										id='path62'
										d='M56.4704 6.9794C55.8544 6.60473 55.049 6.80606 54.677 7.42606C54.305 8.0434 54.505 8.84607 55.1237 9.21807C61.253 12.9074 65.213 20.0767 65.213 27.4861V46.3834C65.213 53.7847 61.3437 60.7087 55.1157 64.4527C54.497 64.8247 54.2984 65.6274 54.6704 66.2461C54.9144 66.6541 55.3477 66.8794 55.7904 66.8794C56.021 66.8794 56.253 66.8194 56.4637 66.6927C63.4717 62.4794 67.8264 54.6967 67.8264 46.3834V27.4861C67.8264 19.1807 63.369 11.1301 56.4704 6.9794Z'
										fill='#24C7B1'
									/>
								</g>
							</a>

							<g
								onDoubleClick={() => {
									setTimeout(() => {
										setShowSecondQrCode(true);
										setShowFirstQrCode(undefined);
									}, delay);
								}}
								id='E'
								className='cursor-pointer'>
								<path id='path50' d='M62.9411 0.814623H59.5171L56.6011 4.83862H59.2077L62.9411 0.814623Z' fill='#24C7B1' />
							</g>
						</g>
					</g>
				</g>
			</svg>

			{showFirstQrCode && <img className='select-none w-28' src={QRCode} alt='' />}
			{showSecondQrCode && <img className='select-none w-28' src={SecondQRCode} alt='' />}
		</div>
	);
};

export default Banner;
